plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'androidx.navigation.safeargs.kotlin'
//    id 'com.kezong.fat-aar'
//    id 'com.google.devtools.ksp' version '1.8.0-1.0.9'
    id 'kotlin-kapt'
}

android {
    namespace 'ai.passio.nutrition.uimodule'
    compileSdk 34

    defaultConfig {
        minSdkVersion 26
        targetSdkVersion 34

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    api 'ai.passio.passiosdk:nutrition-ai:3.2.0'
//    api(project(":passio-sdk"))
//    embed project(path: ':passio-sdk', configuration: 'default')

    implementation 'android.arch.lifecycle:extensions:1.1.1'
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.0"
    implementation "androidx.activity:activity-ktx:1.6.2"
    implementation "androidx.fragment:fragment-ktx:1.6.2"

    // TensorFlow
    implementation 'org.tensorflow:tensorflow-lite:2.8.0'
    implementation 'org.tensorflow:tensorflow-lite-metadata:0.4.0'

    // CameraX
    def camerax_version = "1.3.0-alpha12"
    implementation "androidx.camera:camera-core:$camerax_version"
    implementation "androidx.camera:camera-camera2:$camerax_version"
    implementation "androidx.camera:camera-lifecycle:$camerax_version"
    implementation 'androidx.camera:camera-view:1.3.0-alpha02'
    implementation 'androidx.camera:camera-extensions:1.3.0-alpha02'

    // Barcode and OCR
    implementation 'com.google.android.gms:play-services-mlkit-text-recognition:19.0.0'
    implementation 'com.google.android.gms:play-services-mlkit-barcode-scanning:18.3.0'

    implementation 'de.hdodenhof:circleimageview:3.1.0'

    def nav_version = "2.5.3"
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'
//    implementation 'com.github.warkiz.tickseekbar:tickseekbar:0.1.4'
    implementation 'com.yanzhenjie.recyclerview:x:1.3.2'

    implementation 'com.google.code.gson:gson:2.8.6'

    implementation 'net.danlew:android.joda:2.12.5'
    implementation 'com.github.prolificinteractive:material-calendarview:2.0.1'

    implementation 'androidx.browser:browser:1.5.0'

    implementation("io.coil-kt:coil:2.2.2")
    // If you want to use Coil with Kotlin 1.8.0
    implementation("io.coil-kt:coil-base:2.2.2")

    implementation 'com.airbnb.android:lottie:6.4.0'

    implementation 'io.noties.markwon:core:4.6.2'
    implementation 'io.noties.markwon:linkify:4.6.2'
    implementation 'io.noties.markwon:html:4.6.2'
//    implementation 'io.noties.markwon:syntax-highlight:4.6.2'

    implementation 'com.intuit.sdp:sdp-android:1.1.1'
    implementation 'com.intuit.ssp:ssp-android:1.1.1'


    def room_version = "2.5.2"
    implementation "androidx.room:room-runtime:$room_version"
//    annotationProcessor "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"

    // To use Kotlin annotation processing tool (kapt)
    kapt "androidx.room:room-compiler:$room_version"
    // To use Kotlin Symbol Processing (KSP)
//    ksp "androidx.room:room-compiler:$room_version"


}